// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: common/order.proto

package proto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type OrderStatus_Enum int32

const (
	// 未知
	OrderStatus_UNKNOW OrderStatus_Enum = 0
	// 订单本地创建
	OrderStatus_CREATE OrderStatus_Enum = 1
	// 订单通过本地柜台检查
	OrderStatus_LOCAL OrderStatus_Enum = 2
	// 报单的初始状态，表示单子刚开始，尚未报到柜台：在交易通道
	OrderStatus_STARTED OrderStatus_Enum = 3
	// 柜台已接收，但尚未报到交易所
	OrderStatus_TRIGGERED OrderStatus_Enum = 4
	// 交易所已接收，但尚未成交
	OrderStatus_PLACED OrderStatus_Enum = 5
	// 部分成交还在队列中
	OrderStatus_PARTIAL OrderStatus_Enum = 6
	// 全部成交
	OrderStatus_FILLED OrderStatus_Enum = 7
	// 已撤单
	OrderStatus_CANCELED OrderStatus_Enum = 8
	// 错误
	OrderStatus_ERROR OrderStatus_Enum = 9
	// 订单已过期：如限价单或交易日切换
	OrderStatus_EXPIRED OrderStatus_Enum = 10
	//撤单中
	OrderStatus_PENDING_CANCEL OrderStatus_Enum = 11
)

// Enum value maps for OrderStatus_Enum.
var (
	OrderStatus_Enum_name = map[int32]string{
		0:  "UNKNOW",
		1:  "CREATE",
		2:  "LOCAL",
		3:  "STARTED",
		4:  "TRIGGERED",
		5:  "PLACED",
		6:  "PARTIAL",
		7:  "FILLED",
		8:  "CANCELED",
		9:  "ERROR",
		10: "EXPIRED",
		11: "PENDING_CANCEL",
	}
	OrderStatus_Enum_value = map[string]int32{
		"UNKNOW":         0,
		"CREATE":         1,
		"LOCAL":          2,
		"STARTED":        3,
		"TRIGGERED":      4,
		"PLACED":         5,
		"PARTIAL":        6,
		"FILLED":         7,
		"CANCELED":       8,
		"ERROR":          9,
		"EXPIRED":        10,
		"PENDING_CANCEL": 11,
	}
)

func (x OrderStatus_Enum) Enum() *OrderStatus_Enum {
	p := new(OrderStatus_Enum)
	*p = x
	return p
}

func (x OrderStatus_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderStatus_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_common_order_proto_enumTypes[0].Descriptor()
}

func (OrderStatus_Enum) Type() protoreflect.EnumType {
	return &file_common_order_proto_enumTypes[0]
}

func (x OrderStatus_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderStatus_Enum.Descriptor instead.
func (OrderStatus_Enum) EnumDescriptor() ([]byte, []int) {
	return file_common_order_proto_rawDescGZIP(), []int{2, 0}
}

type OrderType_Enum int32

const (
	OrderType_UNKNOW OrderType_Enum = 0
	// 限价单
	OrderType_LIMIT OrderType_Enum = 1
	// 市价单
	OrderType_MARKET OrderType_Enum = 2
)

// Enum value maps for OrderType_Enum.
var (
	OrderType_Enum_name = map[int32]string{
		0: "UNKNOW",
		1: "LIMIT",
		2: "MARKET",
	}
	OrderType_Enum_value = map[string]int32{
		"UNKNOW": 0,
		"LIMIT":  1,
		"MARKET": 2,
	}
)

func (x OrderType_Enum) Enum() *OrderType_Enum {
	p := new(OrderType_Enum)
	*p = x
	return p
}

func (x OrderType_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderType_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_common_order_proto_enumTypes[1].Descriptor()
}

func (OrderType_Enum) Type() protoreflect.EnumType {
	return &file_common_order_proto_enumTypes[1]
}

func (x OrderType_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderType_Enum.Descriptor instead.
func (OrderType_Enum) EnumDescriptor() ([]byte, []int) {
	return file_common_order_proto_rawDescGZIP(), []int{3, 0}
}

type OrderAction_Enum int32

const (
	OrderAction_UNKNOW OrderAction_Enum = 0
	// 买入平仓：股票
	OrderAction_BUY_TO_CLOSE OrderAction_Enum = 1
	// 买入平今仓：期货
	OrderAction_BUY_TO_CLOSE_TODAY OrderAction_Enum = 2
	// 买入平昨仓：期货
	OrderAction_BUY_TO_CLOSE_YESTERDAY OrderAction_Enum = 3
	// 买入开仓
	OrderAction_BUY_TO_OPEN OrderAction_Enum = 4
	// 卖出平仓：股票
	OrderAction_SELL_TO_CLOSE OrderAction_Enum = 5
	// 卖出平今仓：期货
	OrderAction_SELL_TO_CLOSE_TODAY OrderAction_Enum = 6
	// 卖出平昨仓：期货
	OrderAction_SELL_TO_CLOSE_YESTERDAY OrderAction_Enum = 7
	// 卖出开仓
	OrderAction_SELL_TO_OPEN OrderAction_Enum = 8
)

// Enum value maps for OrderAction_Enum.
var (
	OrderAction_Enum_name = map[int32]string{
		0: "UNKNOW",
		1: "BUY_TO_CLOSE",
		2: "BUY_TO_CLOSE_TODAY",
		3: "BUY_TO_CLOSE_YESTERDAY",
		4: "BUY_TO_OPEN",
		5: "SELL_TO_CLOSE",
		6: "SELL_TO_CLOSE_TODAY",
		7: "SELL_TO_CLOSE_YESTERDAY",
		8: "SELL_TO_OPEN",
	}
	OrderAction_Enum_value = map[string]int32{
		"UNKNOW":                  0,
		"BUY_TO_CLOSE":            1,
		"BUY_TO_CLOSE_TODAY":      2,
		"BUY_TO_CLOSE_YESTERDAY":  3,
		"BUY_TO_OPEN":             4,
		"SELL_TO_CLOSE":           5,
		"SELL_TO_CLOSE_TODAY":     6,
		"SELL_TO_CLOSE_YESTERDAY": 7,
		"SELL_TO_OPEN":            8,
	}
)

func (x OrderAction_Enum) Enum() *OrderAction_Enum {
	p := new(OrderAction_Enum)
	*p = x
	return p
}

func (x OrderAction_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderAction_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_common_order_proto_enumTypes[2].Descriptor()
}

func (OrderAction_Enum) Type() protoreflect.EnumType {
	return &file_common_order_proto_enumTypes[2]
}

func (x OrderAction_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderAction_Enum.Descriptor instead.
func (OrderAction_Enum) EnumDescriptor() ([]byte, []int) {
	return file_common_order_proto_rawDescGZIP(), []int{4, 0}
}

type HedgeFlag_Enum int32

const (
	HedgeFlag_UNKNOW HedgeFlag_Enum = 0
	// 投机
	HedgeFlag_SPECULATIVE HedgeFlag_Enum = 1
	// 套利
	HedgeFlag_ARBITRAGE HedgeFlag_Enum = 2
	// 套保
	HedgeFlag_HEDGING HedgeFlag_Enum = 3
)

// Enum value maps for HedgeFlag_Enum.
var (
	HedgeFlag_Enum_name = map[int32]string{
		0: "UNKNOW",
		1: "SPECULATIVE",
		2: "ARBITRAGE",
		3: "HEDGING",
	}
	HedgeFlag_Enum_value = map[string]int32{
		"UNKNOW":      0,
		"SPECULATIVE": 1,
		"ARBITRAGE":   2,
		"HEDGING":     3,
	}
)

func (x HedgeFlag_Enum) Enum() *HedgeFlag_Enum {
	p := new(HedgeFlag_Enum)
	*p = x
	return p
}

func (x HedgeFlag_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HedgeFlag_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_common_order_proto_enumTypes[3].Descriptor()
}

func (HedgeFlag_Enum) Type() protoreflect.EnumType {
	return &file_common_order_proto_enumTypes[3]
}

func (x HedgeFlag_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HedgeFlag_Enum.Descriptor instead.
func (HedgeFlag_Enum) EnumDescriptor() ([]byte, []int) {
	return file_common_order_proto_rawDescGZIP(), []int{5, 0}
}

type OrderErrorType_Enum int32

const (
	OrderErrorType_UNKNOW OrderErrorType_Enum = 0
	// 下单价格异常
	OrderErrorType_INPUT_PRICE_ERROR OrderErrorType_Enum = 1
	// 无法获取涨跌停价格
	OrderErrorType_MARKET_QUTOE_ERROR OrderErrorType_Enum = 2
	// 资金账号不支持
	OrderErrorType_ACCOUNT_NOT_SUPPORT OrderErrorType_Enum = 3
	// 合约代码异常
	OrderErrorType_CONTRACT_CODE_ERROR OrderErrorType_Enum = 4
	// 订单类型异
	OrderErrorType_ORDER_TYPE_ERROR OrderErrorType_Enum = 5
	// 订单方向异常
	OrderErrorType_ORDER_ACTION_ERROR OrderErrorType_Enum = 6
	// 下单数量异常
	OrderErrorType_INPUT_VOL_ERROR OrderErrorType_Enum = 7
	// 策略资金账号未设置
	OrderErrorType_ACCOUNT_NOT_SET OrderErrorType_Enum = 8
	// 策略未启动
	OrderErrorType_STRATEGY_NOT_START OrderErrorType_Enum = 9
	// 资金账号未登录
	OrderErrorType_NOT_LOG_IN OrderErrorType_Enum = 10
	// 没有该订单品种的撮合行情
	OrderErrorType_NO_QUOTE OrderErrorType_Enum = 11
	// 交易所未开市
	OrderErrorType_EXCHANGE_NOT_OPEN OrderErrorType_Enum = 12
	// 不支持的交易品种
	OrderErrorType_UNSUPPORT_TYPE OrderErrorType_Enum = 13
	// 可用仓位不足
	OrderErrorType_POSITION_NOT_AVAIABLE OrderErrorType_Enum = 14
	// 可用资金不足
	OrderErrorType_FUND_NOT_AVAIABLE OrderErrorType_Enum = 15
	// 订单ID重复
	OrderErrorType_LOCAL_ID_EXIST OrderErrorType_Enum = 16
	// 渠道号不存在
	OrderErrorType_CHANNEL_NOT_SET OrderErrorType_Enum = 17
	// 可用融券数量不足
	OrderErrorType_Borrow_NOT_AVAIABLE OrderErrorType_Enum = 18
)

// Enum value maps for OrderErrorType_Enum.
var (
	OrderErrorType_Enum_name = map[int32]string{
		0:  "UNKNOW",
		1:  "INPUT_PRICE_ERROR",
		2:  "MARKET_QUTOE_ERROR",
		3:  "ACCOUNT_NOT_SUPPORT",
		4:  "CONTRACT_CODE_ERROR",
		5:  "ORDER_TYPE_ERROR",
		6:  "ORDER_ACTION_ERROR",
		7:  "INPUT_VOL_ERROR",
		8:  "ACCOUNT_NOT_SET",
		9:  "STRATEGY_NOT_START",
		10: "NOT_LOG_IN",
		11: "NO_QUOTE",
		12: "EXCHANGE_NOT_OPEN",
		13: "UNSUPPORT_TYPE",
		14: "POSITION_NOT_AVAIABLE",
		15: "FUND_NOT_AVAIABLE",
		16: "LOCAL_ID_EXIST",
		17: "CHANNEL_NOT_SET",
		18: "Borrow_NOT_AVAIABLE",
	}
	OrderErrorType_Enum_value = map[string]int32{
		"UNKNOW":                0,
		"INPUT_PRICE_ERROR":     1,
		"MARKET_QUTOE_ERROR":    2,
		"ACCOUNT_NOT_SUPPORT":   3,
		"CONTRACT_CODE_ERROR":   4,
		"ORDER_TYPE_ERROR":      5,
		"ORDER_ACTION_ERROR":    6,
		"INPUT_VOL_ERROR":       7,
		"ACCOUNT_NOT_SET":       8,
		"STRATEGY_NOT_START":    9,
		"NOT_LOG_IN":            10,
		"NO_QUOTE":              11,
		"EXCHANGE_NOT_OPEN":     12,
		"UNSUPPORT_TYPE":        13,
		"POSITION_NOT_AVAIABLE": 14,
		"FUND_NOT_AVAIABLE":     15,
		"LOCAL_ID_EXIST":        16,
		"CHANNEL_NOT_SET":       17,
		"Borrow_NOT_AVAIABLE":   18,
	}
)

func (x OrderErrorType_Enum) Enum() *OrderErrorType_Enum {
	p := new(OrderErrorType_Enum)
	*p = x
	return p
}

func (x OrderErrorType_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderErrorType_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_common_order_proto_enumTypes[4].Descriptor()
}

func (OrderErrorType_Enum) Type() protoreflect.EnumType {
	return &file_common_order_proto_enumTypes[4]
}

func (x OrderErrorType_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderErrorType_Enum.Descriptor instead.
func (OrderErrorType_Enum) EnumDescriptor() ([]byte, []int) {
	return file_common_order_proto_rawDescGZIP(), []int{6, 0}
}

type RuningStatus_Enum int32

const (
	RuningStatus_CREATED  RuningStatus_Enum = 0
	RuningStatus_INITED   RuningStatus_Enum = 1
	RuningStatus_STARTED  RuningStatus_Enum = 2
	RuningStatus_RUNNING  RuningStatus_Enum = 3
	RuningStatus_PAUSED   RuningStatus_Enum = 4
	RuningStatus_STOPED   RuningStatus_Enum = 5
	RuningStatus_FINISHED RuningStatus_Enum = 6
)

// Enum value maps for RuningStatus_Enum.
var (
	RuningStatus_Enum_name = map[int32]string{
		0: "CREATED",
		1: "INITED",
		2: "STARTED",
		3: "RUNNING",
		4: "PAUSED",
		5: "STOPED",
		6: "FINISHED",
	}
	RuningStatus_Enum_value = map[string]int32{
		"CREATED":  0,
		"INITED":   1,
		"STARTED":  2,
		"RUNNING":  3,
		"PAUSED":   4,
		"STOPED":   5,
		"FINISHED": 6,
	}
)

func (x RuningStatus_Enum) Enum() *RuningStatus_Enum {
	p := new(RuningStatus_Enum)
	*p = x
	return p
}

func (x RuningStatus_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RuningStatus_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_common_order_proto_enumTypes[5].Descriptor()
}

func (RuningStatus_Enum) Type() protoreflect.EnumType {
	return &file_common_order_proto_enumTypes[5]
}

func (x RuningStatus_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RuningStatus_Enum.Descriptor instead.
func (RuningStatus_Enum) EnumDescriptor() ([]byte, []int) {
	return file_common_order_proto_rawDescGZIP(), []int{7, 0}
}

// 母订单
type ParentOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 本地订单号
	OriginId string `protobuf:"bytes,1,opt,name=originId,proto3" json:"originId,omitempty"`
	// 订单状态
	OrderStatus OrderStatus_Enum `protobuf:"varint,2,opt,name=orderStatus,proto3,enum=pb.OrderStatus_Enum" json:"orderStatus,omitempty"`
	// 下单日期
	InsertTime int64 `protobuf:"varint,3,opt,name=insertTime,proto3" json:"insertTime,omitempty"`
	// 成交数量
	FilledQuantity int32 `protobuf:"varint,4,opt,name=filledQuantity,proto3" json:"filledQuantity,omitempty"`
	// 下单价格
	InputPrice float64 `protobuf:"fixed64,5,opt,name=inputPrice,proto3" json:"inputPrice,omitempty"`
	// 下单数量
	InputVol int32 `protobuf:"varint,6,opt,name=inputVol,proto3" json:"inputVol,omitempty"`
	// 订单类型
	OrderType OrderType_Enum `protobuf:"varint,7,opt,name=orderType,proto3,enum=pb.OrderType_Enum" json:"orderType,omitempty"`
	// 下单方向
	OrderAction OrderAction_Enum `protobuf:"varint,8,opt,name=orderAction,proto3,enum=pb.OrderAction_Enum" json:"orderAction,omitempty"`
	// 代理
	Broker string `protobuf:"bytes,9,opt,name=broker,proto3" json:"broker,omitempty"`
	// 最新：更新时间
	LatestUpdateTime int64 `protobuf:"varint,10,opt,name=latestUpdateTime,proto3" json:"latestUpdateTime,omitempty"`
	// 异常代码
	ErrorID int32 `protobuf:"varint,11,opt,name=errorID,proto3" json:"errorID,omitempty"`
	// 异常消息
	ErrorMsg string `protobuf:"bytes,12,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	// 对冲标志
	HedgeFlag HedgeFlag_Enum `protobuf:"varint,13,opt,name=hedgeFlag,proto3,enum=pb.HedgeFlag_Enum" json:"hedgeFlag,omitempty"`
	// 备注信息
	Remark string `protobuf:"bytes,14,opt,name=remark,proto3" json:"remark,omitempty"`
	// 合约代码
	Symbol string `protobuf:"bytes,15,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// 资金账号
	AccoutId string `protobuf:"bytes,16,opt,name=accoutId,proto3" json:"accoutId,omitempty"`
	// 策略ID
	StrategyId string `protobuf:"bytes,17,opt,name=strategyId,proto3" json:"strategyId,omitempty"`
	// 用户
	User string `protobuf:"bytes,18,opt,name=user,proto3" json:"user,omitempty"`
	// 平均成交价
	AvgPrice float64 `protobuf:"fixed64,19,opt,name=avgPrice,proto3" json:"avgPrice,omitempty"`
	// 组合
	Portfolio string `protobuf:"bytes,20,opt,name=portfolio,proto3" json:"portfolio,omitempty"`
	// 算法服务id
	Algo string `protobuf:"bytes,21,opt,name=algo,proto3" json:"algo,omitempty"`
	//组
	Group string `protobuf:"bytes,22,opt,name=group,proto3" json:"group,omitempty"`
	//交易员
	Trader string `protobuf:"bytes,23,opt,name=trader,proto3" json:"trader,omitempty"`
	//渠道编号
	Channel PositionChannel_Enum `protobuf:"varint,24,opt,name=channel,proto3,enum=pb.PositionChannel_Enum" json:"channel,omitempty"`
	//运行状态
	RuningStatus RuningStatus_Enum `protobuf:"varint,25,opt,name=runingStatus,proto3,enum=pb.RuningStatus_Enum" json:"runingStatus,omitempty"`
	//参数列表
	Params string `protobuf:"bytes,26,opt,name=params,proto3" json:"params,omitempty"`
	//PM
	Pm string `protobuf:"bytes,27,opt,name=pm,proto3" json:"pm,omitempty"`
	// 信号ID
	SignalId       string `protobuf:"bytes,28,opt,name=signalId,proto3" json:"signalId,omitempty"`
	TradingBatchId string `protobuf:"bytes,29,opt,name=tradingBatchId,proto3" json:"tradingBatchId,omitempty"`
}

func (x *ParentOrder) Reset() {
	*x = ParentOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_order_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParentOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParentOrder) ProtoMessage() {}

func (x *ParentOrder) ProtoReflect() protoreflect.Message {
	mi := &file_common_order_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParentOrder.ProtoReflect.Descriptor instead.
func (*ParentOrder) Descriptor() ([]byte, []int) {
	return file_common_order_proto_rawDescGZIP(), []int{0}
}

func (x *ParentOrder) GetOriginId() string {
	if x != nil {
		return x.OriginId
	}
	return ""
}

func (x *ParentOrder) GetOrderStatus() OrderStatus_Enum {
	if x != nil {
		return x.OrderStatus
	}
	return OrderStatus_UNKNOW
}

func (x *ParentOrder) GetInsertTime() int64 {
	if x != nil {
		return x.InsertTime
	}
	return 0
}

func (x *ParentOrder) GetFilledQuantity() int32 {
	if x != nil {
		return x.FilledQuantity
	}
	return 0
}

func (x *ParentOrder) GetInputPrice() float64 {
	if x != nil {
		return x.InputPrice
	}
	return 0
}

func (x *ParentOrder) GetInputVol() int32 {
	if x != nil {
		return x.InputVol
	}
	return 0
}

func (x *ParentOrder) GetOrderType() OrderType_Enum {
	if x != nil {
		return x.OrderType
	}
	return OrderType_UNKNOW
}

func (x *ParentOrder) GetOrderAction() OrderAction_Enum {
	if x != nil {
		return x.OrderAction
	}
	return OrderAction_UNKNOW
}

func (x *ParentOrder) GetBroker() string {
	if x != nil {
		return x.Broker
	}
	return ""
}

func (x *ParentOrder) GetLatestUpdateTime() int64 {
	if x != nil {
		return x.LatestUpdateTime
	}
	return 0
}

func (x *ParentOrder) GetErrorID() int32 {
	if x != nil {
		return x.ErrorID
	}
	return 0
}

func (x *ParentOrder) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

func (x *ParentOrder) GetHedgeFlag() HedgeFlag_Enum {
	if x != nil {
		return x.HedgeFlag
	}
	return HedgeFlag_UNKNOW
}

func (x *ParentOrder) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ParentOrder) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *ParentOrder) GetAccoutId() string {
	if x != nil {
		return x.AccoutId
	}
	return ""
}

func (x *ParentOrder) GetStrategyId() string {
	if x != nil {
		return x.StrategyId
	}
	return ""
}

func (x *ParentOrder) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ParentOrder) GetAvgPrice() float64 {
	if x != nil {
		return x.AvgPrice
	}
	return 0
}

func (x *ParentOrder) GetPortfolio() string {
	if x != nil {
		return x.Portfolio
	}
	return ""
}

func (x *ParentOrder) GetAlgo() string {
	if x != nil {
		return x.Algo
	}
	return ""
}

func (x *ParentOrder) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *ParentOrder) GetTrader() string {
	if x != nil {
		return x.Trader
	}
	return ""
}

func (x *ParentOrder) GetChannel() PositionChannel_Enum {
	if x != nil {
		return x.Channel
	}
	return PositionChannel_UnKnow
}

func (x *ParentOrder) GetRuningStatus() RuningStatus_Enum {
	if x != nil {
		return x.RuningStatus
	}
	return RuningStatus_CREATED
}

func (x *ParentOrder) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *ParentOrder) GetPm() string {
	if x != nil {
		return x.Pm
	}
	return ""
}

func (x *ParentOrder) GetSignalId() string {
	if x != nil {
		return x.SignalId
	}
	return ""
}

func (x *ParentOrder) GetTradingBatchId() string {
	if x != nil {
		return x.TradingBatchId
	}
	return ""
}

// 订单成交对象
type OrderDeal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 成交时间
	DealTime int64 `protobuf:"varint,1,opt,name=dealTime,proto3" json:"dealTime,omitempty"`
	// 成交价格
	DealPrice float64 `protobuf:"fixed64,3,opt,name=dealPrice,proto3" json:"dealPrice,omitempty"`
	// 成交数量
	FilledQuantity int32 `protobuf:"varint,4,opt,name=filledQuantity,proto3" json:"filledQuantity,omitempty"`
	// 所属订单
	OrderId string `protobuf:"bytes,5,opt,name=orderId,proto3" json:"orderId,omitempty"`
}

func (x *OrderDeal) Reset() {
	*x = OrderDeal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_order_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDeal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDeal) ProtoMessage() {}

func (x *OrderDeal) ProtoReflect() protoreflect.Message {
	mi := &file_common_order_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDeal.ProtoReflect.Descriptor instead.
func (*OrderDeal) Descriptor() ([]byte, []int) {
	return file_common_order_proto_rawDescGZIP(), []int{1}
}

func (x *OrderDeal) GetDealTime() int64 {
	if x != nil {
		return x.DealTime
	}
	return 0
}

func (x *OrderDeal) GetDealPrice() float64 {
	if x != nil {
		return x.DealPrice
	}
	return 0
}

func (x *OrderDeal) GetFilledQuantity() int32 {
	if x != nil {
		return x.FilledQuantity
	}
	return 0
}

func (x *OrderDeal) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

// 订单状态
type OrderStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OrderStatus) Reset() {
	*x = OrderStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_order_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderStatus) ProtoMessage() {}

func (x *OrderStatus) ProtoReflect() protoreflect.Message {
	mi := &file_common_order_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderStatus.ProtoReflect.Descriptor instead.
func (*OrderStatus) Descriptor() ([]byte, []int) {
	return file_common_order_proto_rawDescGZIP(), []int{2}
}

// 订单类型
type OrderType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OrderType) Reset() {
	*x = OrderType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_order_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderType) ProtoMessage() {}

func (x *OrderType) ProtoReflect() protoreflect.Message {
	mi := &file_common_order_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderType.ProtoReflect.Descriptor instead.
func (*OrderType) Descriptor() ([]byte, []int) {
	return file_common_order_proto_rawDescGZIP(), []int{3}
}

// 下单方向
type OrderAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OrderAction) Reset() {
	*x = OrderAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_order_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderAction) ProtoMessage() {}

func (x *OrderAction) ProtoReflect() protoreflect.Message {
	mi := &file_common_order_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderAction.ProtoReflect.Descriptor instead.
func (*OrderAction) Descriptor() ([]byte, []int) {
	return file_common_order_proto_rawDescGZIP(), []int{4}
}

// 对冲标志
type HedgeFlag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HedgeFlag) Reset() {
	*x = HedgeFlag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_order_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HedgeFlag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HedgeFlag) ProtoMessage() {}

func (x *HedgeFlag) ProtoReflect() protoreflect.Message {
	mi := &file_common_order_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HedgeFlag.ProtoReflect.Descriptor instead.
func (*HedgeFlag) Descriptor() ([]byte, []int) {
	return file_common_order_proto_rawDescGZIP(), []int{5}
}

// 订单错误类型
type OrderErrorType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OrderErrorType) Reset() {
	*x = OrderErrorType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_order_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderErrorType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderErrorType) ProtoMessage() {}

func (x *OrderErrorType) ProtoReflect() protoreflect.Message {
	mi := &file_common_order_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderErrorType.ProtoReflect.Descriptor instead.
func (*OrderErrorType) Descriptor() ([]byte, []int) {
	return file_common_order_proto_rawDescGZIP(), []int{6}
}

// 订单的算法执行状态
type RuningStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RuningStatus) Reset() {
	*x = RuningStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_order_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuningStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuningStatus) ProtoMessage() {}

func (x *RuningStatus) ProtoReflect() protoreflect.Message {
	mi := &file_common_order_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuningStatus.ProtoReflect.Descriptor instead.
func (*RuningStatus) Descriptor() ([]byte, []int) {
	return file_common_order_proto_rawDescGZIP(), []int{7}
}

var File_common_order_proto protoreflect.FileDescriptor

var file_common_order_proto_rawDesc = []byte{
	0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xd2, 0x07, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x0b, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x66, 0x69, 0x6c,
	0x6c, 0x65, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x56, 0x6f, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x56, 0x6f, 0x6c, 0x12, 0x30, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x09,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14,
	0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x10, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x44,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x30, 0x0a, 0x09, 0x68,
	0x65, 0x64, 0x67, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x70, 0x62, 0x2e, 0x48, 0x65, 0x64, 0x67, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x2e, 0x45, 0x6e,
	0x75, 0x6d, 0x52, 0x09, 0x68, 0x65, 0x64, 0x67, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x74, 0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x76, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x61, 0x76, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6f, 0x72,
	0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6f,
	0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x6c, 0x67, 0x6f, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x6c, 0x67, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e,
	0x45, 0x6e, 0x75, 0x6d, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x39, 0x0a,
	0x0c, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0c, 0x72, 0x75, 0x6e, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x70, 0x6d, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x70, 0x6d,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x1c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x18, 0x1d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x49, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65,
	0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x65, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x64, 0x65, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x09, 0x64, 0x65, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x51, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0xb4,
	0x01, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa4,
	0x01, 0x0a, 0x04, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12,
	0x09, 0x0a, 0x05, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54,
	0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x52, 0x49, 0x47, 0x47,
	0x45, 0x52, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x44,
	0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x41, 0x52, 0x54, 0x49, 0x41, 0x4c, 0x10, 0x06, 0x12,
	0x0a, 0x0a, 0x06, 0x46, 0x49, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x07, 0x12, 0x0c, 0x0a, 0x08, 0x43,
	0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x08, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x09, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10,
	0x0a, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x41, 0x4e,
	0x43, 0x45, 0x4c, 0x10, 0x0b, 0x22, 0x36, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x29, 0x0a, 0x04, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x41, 0x52, 0x4b, 0x45, 0x54, 0x10, 0x02, 0x22, 0xd4, 0x01,
	0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc4, 0x01,
	0x0a, 0x04, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x55, 0x59, 0x5f, 0x54, 0x4f, 0x5f, 0x43, 0x4c, 0x4f,
	0x53, 0x45, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x55, 0x59, 0x5f, 0x54, 0x4f, 0x5f, 0x43,
	0x4c, 0x4f, 0x53, 0x45, 0x5f, 0x54, 0x4f, 0x44, 0x41, 0x59, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16,
	0x42, 0x55, 0x59, 0x5f, 0x54, 0x4f, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x5f, 0x59, 0x45, 0x53,
	0x54, 0x45, 0x52, 0x44, 0x41, 0x59, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x55, 0x59, 0x5f,
	0x54, 0x4f, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x45, 0x4c,
	0x4c, 0x5f, 0x54, 0x4f, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13,
	0x53, 0x45, 0x4c, 0x4c, 0x5f, 0x54, 0x4f, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x5f, 0x54, 0x4f,
	0x44, 0x41, 0x59, 0x10, 0x06, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x45, 0x4c, 0x4c, 0x5f, 0x54, 0x4f,
	0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x5f, 0x59, 0x45, 0x53, 0x54, 0x45, 0x52, 0x44, 0x41, 0x59,
	0x10, 0x07, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x45, 0x4c, 0x4c, 0x5f, 0x54, 0x4f, 0x5f, 0x4f, 0x50,
	0x45, 0x4e, 0x10, 0x08, 0x22, 0x4c, 0x0a, 0x09, 0x48, 0x65, 0x64, 0x67, 0x65, 0x46, 0x6c, 0x61,
	0x67, 0x22, 0x3f, 0x0a, 0x04, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x50, 0x45, 0x43, 0x55, 0x4c, 0x41,
	0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x52, 0x42, 0x49, 0x54, 0x52,
	0x41, 0x47, 0x45, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x48, 0x45, 0x44, 0x47, 0x49, 0x4e, 0x47,
	0x10, 0x03, 0x22, 0xb3, 0x03, 0x0a, 0x0e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0xa0, 0x03, 0x0a, 0x04, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0a,
	0x0a, 0x06, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e,
	0x50, 0x55, 0x54, 0x5f, 0x50, 0x52, 0x49, 0x43, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x01, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x41, 0x52, 0x4b, 0x45, 0x54, 0x5f, 0x51, 0x55, 0x54, 0x4f,
	0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x43, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54,
	0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x5f, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x4f,
	0x52, 0x44, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x05, 0x12, 0x16, 0x0a, 0x12, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4e, 0x50,
	0x55, 0x54, 0x5f, 0x56, 0x4f, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x07, 0x12, 0x13,
	0x0a, 0x0f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x45,
	0x54, 0x10, 0x08, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x52, 0x41, 0x54, 0x45, 0x47, 0x59, 0x5f,
	0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x09, 0x12, 0x0e, 0x0a, 0x0a, 0x4e,
	0x4f, 0x54, 0x5f, 0x4c, 0x4f, 0x47, 0x5f, 0x49, 0x4e, 0x10, 0x0a, 0x12, 0x0c, 0x0a, 0x08, 0x4e,
	0x4f, 0x5f, 0x51, 0x55, 0x4f, 0x54, 0x45, 0x10, 0x0b, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x58, 0x43,
	0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x0c,
	0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x10, 0x0d, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x41, 0x56, 0x41, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x0e, 0x12,
	0x15, 0x0a, 0x11, 0x46, 0x55, 0x4e, 0x44, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x41, 0x56, 0x41, 0x49,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x0f, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x5f,
	0x49, 0x44, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0x10, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x48,
	0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x11, 0x12,
	0x17, 0x0a, 0x13, 0x42, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x41, 0x56,
	0x41, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x12, 0x22, 0x6f, 0x0a, 0x0c, 0x52, 0x75, 0x6e, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5f, 0x0a, 0x04, 0x45, 0x6e, 0x75, 0x6d,
	0x12, 0x0b, 0x0a, 0x07, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x49, 0x4e, 0x49, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x41,
	0x52, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e,
	0x47, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x41, 0x55, 0x53, 0x45, 0x44, 0x10, 0x04, 0x12,
	0x0a, 0x0a, 0x06, 0x53, 0x54, 0x4f, 0x50, 0x45, 0x44, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x46,
	0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x06, 0x42, 0x0a, 0x5a, 0x08, 0x67, 0x6f, 0x3b,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_order_proto_rawDescOnce sync.Once
	file_common_order_proto_rawDescData = file_common_order_proto_rawDesc
)

func file_common_order_proto_rawDescGZIP() []byte {
	file_common_order_proto_rawDescOnce.Do(func() {
		file_common_order_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_order_proto_rawDescData)
	})
	return file_common_order_proto_rawDescData
}

var file_common_order_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_common_order_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_common_order_proto_goTypes = []interface{}{
	(OrderStatus_Enum)(0),     // 0: pb.OrderStatus.Enum
	(OrderType_Enum)(0),       // 1: pb.OrderType.Enum
	(OrderAction_Enum)(0),     // 2: pb.OrderAction.Enum
	(HedgeFlag_Enum)(0),       // 3: pb.HedgeFlag.Enum
	(OrderErrorType_Enum)(0),  // 4: pb.OrderErrorType.Enum
	(RuningStatus_Enum)(0),    // 5: pb.RuningStatus.Enum
	(*ParentOrder)(nil),       // 6: pb.ParentOrder
	(*OrderDeal)(nil),         // 7: pb.OrderDeal
	(*OrderStatus)(nil),       // 8: pb.OrderStatus
	(*OrderType)(nil),         // 9: pb.OrderType
	(*OrderAction)(nil),       // 10: pb.OrderAction
	(*HedgeFlag)(nil),         // 11: pb.HedgeFlag
	(*OrderErrorType)(nil),    // 12: pb.OrderErrorType
	(*RuningStatus)(nil),      // 13: pb.RuningStatus
	(PositionChannel_Enum)(0), // 14: pb.PositionChannel.Enum
}
var file_common_order_proto_depIdxs = []int32{
	0,  // 0: pb.ParentOrder.orderStatus:type_name -> pb.OrderStatus.Enum
	1,  // 1: pb.ParentOrder.orderType:type_name -> pb.OrderType.Enum
	2,  // 2: pb.ParentOrder.orderAction:type_name -> pb.OrderAction.Enum
	3,  // 3: pb.ParentOrder.hedgeFlag:type_name -> pb.HedgeFlag.Enum
	14, // 4: pb.ParentOrder.channel:type_name -> pb.PositionChannel.Enum
	5,  // 5: pb.ParentOrder.runingStatus:type_name -> pb.RuningStatus.Enum
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { File_common_order_proto_init() }
func File_common_order_proto_init() {
	if File_common_order_proto != nil {
		return
	}
	file_common_position_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_common_order_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParentOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_order_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDeal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_order_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_order_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_order_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_order_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HedgeFlag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_order_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderErrorType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_order_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuningStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_order_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_order_proto_goTypes,
		DependencyIndexes: file_common_order_proto_depIdxs,
		EnumInfos:         file_common_order_proto_enumTypes,
		MessageInfos:      file_common_order_proto_msgTypes,
	}.Build()
	File_common_order_proto = out.File
	file_common_order_proto_rawDesc = nil
	file_common_order_proto_goTypes = nil
	file_common_order_proto_depIdxs = nil
}
